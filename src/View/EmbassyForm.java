/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Model.Country;
import Model.Embassy;
import Service.CountryService;
import Service.EmbassyService;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Naome
 */
public class EmbassyForm extends javax.swing.JInternalFrame {

    /**
     * Creates new form EmbassyForm
     */
    public EmbassyForm() {
        initComponents();
           this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI ui=(BasicInternalFrameUI)this.getUI();
           ui.setNorthPane(null);
        adddata();
        displaydata();
        
    }
 private void adddata(){
        try {
            Registry reg=LocateRegistry.getRegistry("127.0.0.1", 5000);
            CountryService paises=(CountryService) reg.lookup("pais");
           List<Country> thcnt=paises.AllCountries();
           if(thcnt!=null){
               for(Country cntdata:thcnt){
         
                   countryCombo.addItem(cntdata);  
               }
           }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        embassyTb = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        countryCombo = new javax.swing.JComboBox<>();
        locationTXT = new javax.swing.JTextField();
        nameTXT = new javax.swing.JTextField();
        regbtn = new javax.swing.JButton();
        DelBtn = new javax.swing.JButton();
        updateBTN = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        idTXT = new javax.swing.JTextField();
        searchbtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        embassyTb.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 1, 1, 1, new java.awt.Color(51, 102, 255)));
        embassyTb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "NAME", "LOCATION", "COUNTRY"
            }
        ));
        jScrollPane1.setViewportView(embassyTb);

        jLabel4.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 255));
        jLabel4.setText("EMBASSY");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 1, 1, 1, new java.awt.Color(51, 51, 255)));

        jLabel1.setText("EMBASSY NAME");

        jLabel2.setText("LOCATION");

        jLabel5.setText("COUNTRY");

        countryCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countryComboActionPerformed(evt);
            }
        });

        regbtn.setBackground(new java.awt.Color(0, 0, 255));
        regbtn.setText("REGISTER");
        regbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regbtnActionPerformed(evt);
            }
        });

        DelBtn.setBackground(new java.awt.Color(0, 0, 255));
        DelBtn.setText("DELETE");
        DelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DelBtnActionPerformed(evt);
            }
        });

        updateBTN.setBackground(new java.awt.Color(0, 0, 255));
        updateBTN.setText("UPDATE");
        updateBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(locationTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(countryCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(51, 51, 51)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(regbtn)
                    .addComponent(DelBtn)
                    .addComponent(updateBTN))
                .addContainerGap(123, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nameTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(regbtn))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(locationTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(updateBTN)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(countryCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DelBtn))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 1, 1, 1, new java.awt.Color(0, 51, 255)));

        jLabel3.setText("ID");

        searchbtn.setBackground(new java.awt.Color(0, 0, 255));
        searchbtn.setText("SEARCH");
        searchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel3)
                .addGap(33, 33, 33)
                .addComponent(idTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(105, 105, 105)
                .addComponent(searchbtn)
                .addContainerGap(148, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(idTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchbtn))
                .addGap(37, 37, 37))
        );

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/photologo/favicon.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(72, 72, 72))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(230, 230, 230)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 564, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void countryComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countryComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_countryComboActionPerformed
  private void displaydata(){
        
        try {
            Registry reg=LocateRegistry.getRegistry("127.0.0.1", 5000);
            EmbassyService paises =(EmbassyService) reg.lookup("emba");
           List<Embassy> thecnt=paises.AllEmbacies();
            DefaultTableModel tmodel=(DefaultTableModel)embassyTb.getModel();
            tmodel.setRowCount(0);
           if(thecnt!=null){
               for(Embassy cnt:thecnt){
                   Object data[]={
                       
                      cnt.getEmbassyId(),
                   cnt.getEmbassyName(),
                   cnt.getLocation(),
                   cnt.getCountry()
                   };
                   tmodel.addRow(data);
                  
               }
           }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
  }
    private void regbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regbtnActionPerformed
        if(nameTXT.getText().trim().isEmpty()||locationTXT.getText().trim().isEmpty()||countryCombo.getSelectedItem()==null)  {
       JOptionPane.showMessageDialog(null, "All fields are Mandatory","Mandatory Field",JOptionPane.WARNING_MESSAGE);  
    }else{
         try {
            Registry reg=LocateRegistry.getRegistry("127.0.0.1", 5000);
            EmbassyService embbb=(EmbassyService) reg.lookup("emba");
            Embassy emb =new Embassy();
            emb.setEmbassyName(nameTXT.getText());
            emb.setLocation(locationTXT.getText());
            Country adddataitem=(Country) countryCombo.getSelectedItem();
            emb.setCountry(adddataitem);
             List<Embassy> embassies = embbb.checkCountry(adddataitem.getCountryId());
        if (!embassies.isEmpty()) {
            JOptionPane.showMessageDialog(this, "The country is already associated with an embassy.");
            return;
        }
            
            Embassy theembcy=embbb.RegisterEmb(emb);
            if(theembcy!=null){
                JOptionPane.showMessageDialog(this, "Data Saved Successful");
                displaydata();
            }else{
                 JOptionPane.showMessageDialog(this, "Data not Saved");
            }
            
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        }
    }//GEN-LAST:event_regbtnActionPerformed

    private void updateBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBTNActionPerformed
           if(nameTXT.getText().trim().isEmpty()||locationTXT.getText().trim().isEmpty()||countryCombo.getSelectedItem()==null)  {
       JOptionPane.showMessageDialog(null, "All fields are Mandatory","Mandatory Field",JOptionPane.WARNING_MESSAGE);  
    }else{
          try {
            Registry reg=LocateRegistry.getRegistry("127.0.0.1", 5000);
            EmbassyService embbb=(EmbassyService) reg.lookup("emba");
            Embassy emb =new Embassy();
          emb.setEmbassyId(Integer.parseInt(idTXT.getText())); 
            emb.setEmbassyName(nameTXT.getText());
            emb.setLocation(locationTXT.getText());
            Country adddataitem=(Country) countryCombo.getSelectedItem();
            emb.setCountry(adddataitem);
            
            Embassy theembcy=embbb.UpdateEmb(emb);
            if(theembcy!=null){
                JOptionPane.showMessageDialog(this, "Data updated Successful");
                displaydata();
            }else{
                 JOptionPane.showMessageDialog(this, "Data not Saved");
            }
            
            
        } catch (Exception e) {
            e.printStackTrace();
        }
           }


    }//GEN-LAST:event_updateBTNActionPerformed

    private void searchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbtnActionPerformed
         try{
        Registry reg=LocateRegistry.getRegistry("127.0.0.1", 5000);
            EmbassyService paises =(EmbassyService) reg.lookup("emba");
           Embassy cnt=new Embassy();
           cnt.setEmbassyId(Integer.parseInt(idTXT.getText()));
            Embassy thecnt=paises.SearchEmb(cnt);
           if(thecnt!=null){
               nameTXT.setText(thecnt.getEmbassyName());
               locationTXT.setText(thecnt.getLocation());
              
           }else{
               JOptionPane.showMessageDialog(this,"Country ID not Exist! Register Now");
        }
            
        } catch (Exception e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_searchbtnActionPerformed

    private void DelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DelBtnActionPerformed
        // TODO add your handling code here:
        try {
        Registry reg = LocateRegistry.getRegistry("127.0.0.1", 5000);
        EmbassyService paises =( EmbassyService) reg.lookup("emba");
     
          // cnt.setEmbassyId(Integer.parseInt(idTXT.getText()));
        
        // Get the selected row from the table
        int selectedRow = embassyTb.getSelectedRow();
        
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select an emabassy to delete.");
            return;
        }

        // Get the country id from the selected row
        int EmbassyId = (int) embassyTb.getValueAt(selectedRow, 0);
        
        // Create a new Country object with the country id to delete
            Embassy cnt=new Embassy();
            cnt.setEmbassyId(EmbassyId);
     

        // Call the delete method with the selected country
     Embassy deletedemb = paises.DeleteEmb(cnt);
        
        if (deletedemb != null) {
            JOptionPane.showMessageDialog(this, "Data deleted successfully");
            nameTXT.setText("");
            idTXT.setText("");
            locationTXT.setText("");
            
            displaydata();
        } else {
            JOptionPane.showMessageDialog(this, "Data couldn't be deleted");
        }

    } catch (Exception e) {
        e.printStackTrace();
    
    } 
    }//GEN-LAST:event_DelBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DelBtn;
    private javax.swing.JComboBox<Country> countryCombo;
    private javax.swing.JTable embassyTb;
    private javax.swing.JTextField idTXT;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField locationTXT;
    private javax.swing.JTextField nameTXT;
    private javax.swing.JButton regbtn;
    private javax.swing.JButton searchbtn;
    private javax.swing.JButton updateBTN;
    // End of variables declaration//GEN-END:variables
}
